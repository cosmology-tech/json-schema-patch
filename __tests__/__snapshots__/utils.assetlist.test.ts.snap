// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JSONSchemaPatch transformer 1`] = `
{
  "$defs": {
    "asset": {
      "additionalProperties": false,
      "if": {
        "properties": {
          "type_asset": {
            "enum": [
              "erc20",
              "cw20",
              "snip20",
            ],
          },
        },
        "required": [
          "type_asset",
        ],
      },
      "properties": {
        "address": {
          "description": "[OPTIONAL] The address of the asset. Only required for type_asset : cw20, snip20",
          "type": "string",
        },
        "base": {
          "description": "The base unit of the asset. Must be in denom_units.",
          "type": "string",
        },
        "coingeckoId": {
          "description": "[OPTIONAL] The coingecko id to fetch asset data from coingecko v3 api. See https://api.coingecko.com/api/v3/coins/list",
          "type": "string",
        },
        "denomUnits": {
          "items": {
            "$ref": "#/$defs/denomUnit",
          },
          "minContains": 1,
          "type": "array",
        },
        "deprecated": {
          "description": "[OPTIONAL] Whether the asset has been deprecated for use. For readability, it is best to omit this property unless TRUE.",
          "type": "boolean",
        },
        "description": {
          "description": "[OPTIONAL] A short description of the asset",
          "type": "string",
        },
        "display": {
          "description": "The human friendly unit of the asset. Must be in denom_units.",
          "type": "string",
        },
        "extendedDescription": {
          "description": "[OPTIONAL] A long description of the asset",
          "type": "string",
        },
        "ibc": {
          "additionalProperties": false,
          "description": "[OPTIONAL] IBC Channel between src and dst between chain",
          "properties": {
            "dstChannel": {
              "type": "string",
            },
            "sourceChannel": {
              "type": "string",
            },
            "sourceDenom": {
              "type": "string",
            },
          },
          "required": [
            "sourceChannel",
            "dstChannel",
            "sourceDenom",
          ],
          "type": "object",
        },
        "images": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "imageSync": {
                "$ref": "#/$defs/pointer",
              },
              "png": {
                "format": "uri-reference",
                "pattern": "^https://raw\\.githubusercontent\\.com/cosmos/chain-registry/master/(|testnets/|_non-cosmos/)[a-z0-9]+/images/.+\\.png$",
                "type": "string",
              },
              "svg": {
                "format": "uri-reference",
                "pattern": "^https://raw\\.githubusercontent\\.com/cosmos/chain-registry/master/(|testnets/|_non-cosmos/)[a-z0-9]+/images/.+\\.svg$",
                "type": "string",
              },
              "theme": {
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                  "circle": {
                    "type": "boolean",
                  },
                  "darkMode": {
                    "type": "boolean",
                  },
                  "primaryColorHex": {
                    "pattern": "^#[0-9a-fA-F]{6}$",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
          "minItems": 1,
          "type": "array",
        },
        "keywords": {
          "items": {
            "type": "string",
          },
          "maxContains": 20,
          "minContains": 1,
          "type": "array",
        },
        "logoURIs": {
          "additionalProperties": false,
          "properties": {
            "png": {
              "format": "uri-reference",
              "pattern": "^https://raw\\.githubusercontent\\.com/cosmos/chain-registry/master/(|testnets/|_non-cosmos/)[a-z0-9]+/images/.+\\.png$",
              "type": "string",
            },
            "svg": {
              "format": "uri-reference",
              "pattern": "^https://raw\\.githubusercontent\\.com/cosmos/chain-registry/master/(|testnets/|_non-cosmos/)[a-z0-9]+/images/.+\\.svg$",
              "type": "string",
            },
          },
          "type": "object",
        },
        "name": {
          "description": "The project name of the asset. For example Bitcoin.",
          "maxLength": 42,
          "type": "string",
        },
        "socials": {
          "minProperties": 1,
          "properties": {
            "twitter": {
              "format": "uri",
              "type": "string",
            },
            "website": {
              "format": "uri",
              "type": "string",
            },
          },
          "type": "object",
        },
        "symbol": {
          "description": "The symbol of an asset. For example BTC.",
          "type": "string",
        },
        "traces": {
          "description": "The origin of the asset, starting with the index, and capturing all transitions in form and location.",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/ibcTransition",
              },
              {
                "$ref": "#/$defs/ibcCw20Transition",
              },
              {
                "$ref": "#/$defs/nonIbcTransition",
              },
            ],
          },
          "minContains": 1,
          "type": "array",
        },
        "typeAsset": {
          "default": "sdk.coin",
          "description": "[OPTIONAL] The potential options for type of asset. By default, assumes sdk.coin",
          "enum": [
            "sdk.coin",
            "cw20",
            "erc20",
            "ics20",
            "snip20",
            "snip25",
            "sdk.factory",
            "bitcoin-like",
            "evm-base",
            "svm-base",
            "substrate",
            "bitsong",
          ],
          "type": "string",
        },
      },
      "required": [
        "denomUnits",
        "base",
        "display",
        "name",
        "symbol",
      ],
      "then": {
        "required": [
          "address",
        ],
      },
      "type": "object",
    },
    "denomUnit": {
      "additionalProperties": false,
      "properties": {
        "aliases": {
          "items": {
            "type": "string",
          },
          "minContains": 1,
          "type": "array",
        },
        "denom": {
          "type": "string",
        },
        "exponent": {
          "type": "integer",
        },
      },
      "required": [
        "denom",
        "exponent",
      ],
      "type": "object",
    },
    "ibcCw20Transition": {
      "additionalProperties": false,
      "properties": {
        "chain": {
          "additionalProperties": false,
          "properties": {
            "channelId": {
              "description": "The chain's IBC transfer channel(, e.g., 'channel-1').",
              "pattern": "^channel-\\d+$",
              "type": "string",
            },
            "path": {
              "description": "The port/channel/denom input string that generates the 'ibc/...' denom.",
              "type": "string",
            },
            "port": {
              "description": "The port used to transfer IBC assets; often 'transfer', but sometimes varies, e.g., for outgoing cw20 transfers.",
              "type": "string",
            },
          },
          "required": [
            "port",
            "channelId",
            "path",
          ],
          "type": "object",
        },
        "counterparty": {
          "additionalProperties": false,
          "properties": {
            "baseDenom": {
              "description": "The base unit of the asset on its source platform. E.g., when describing ATOM from Cosmos Hub, specify 'uatom', NOT 'atom' nor 'ATOM'; base units are unique per platform.",
              "type": "string",
            },
            "chainName": {
              "description": "The name of the counterparty chain. (must match exactly the chain name used in the Chain Registry)",
              "type": "string",
            },
            "channelId": {
              "description": "The counterparty IBC transfer channel(, e.g., 'channel-1').",
              "pattern": "^channel-\\d+$",
              "type": "string",
            },
            "port": {
              "description": "The port used to transfer IBC assets; often 'transfer', but sometimes varies, e.g., for outgoing cw20 transfers.",
              "type": "string",
            },
          },
          "required": [
            "chainName",
            "baseDenom",
            "port",
            "channelId",
          ],
          "type": "object",
        },
        "type": {
          "enum": [
            "ibc-cw20",
          ],
          "type": "string",
        },
      },
      "required": [
        "type",
        "counterparty",
        "chain",
      ],
      "type": "object",
    },
    "ibcTransition": {
      "additionalProperties": false,
      "properties": {
        "chain": {
          "additionalProperties": false,
          "properties": {
            "channelId": {
              "description": "The chain's IBC transfer channel(, e.g., 'channel-1').",
              "pattern": "^channel-\\d+$",
              "type": "string",
            },
            "path": {
              "description": "The port/channel/denom input string that generates the 'ibc/...' denom.",
              "type": "string",
            },
          },
          "required": [
            "channelId",
            "path",
          ],
          "type": "object",
        },
        "counterparty": {
          "additionalProperties": false,
          "properties": {
            "baseDenom": {
              "description": "The base unit of the asset on its source platform. E.g., when describing ATOM from Cosmos Hub, specify 'uatom', NOT 'atom' nor 'ATOM'; base units are unique per platform.",
              "type": "string",
            },
            "chainName": {
              "description": "The name of the counterparty chain. (must match exactly the chain name used in the Chain Registry)",
              "type": "string",
            },
            "channelId": {
              "description": "The counterparty IBC transfer channel(, e.g., 'channel-1').",
              "pattern": "^channel-(JEnb|\\d+)$",
              "type": "string",
            },
          },
          "required": [
            "chainName",
            "baseDenom",
            "channelId",
          ],
          "type": "object",
        },
        "type": {
          "enum": [
            "ibc",
          ],
          "type": "string",
        },
      },
      "required": [
        "type",
        "counterparty",
        "chain",
      ],
      "type": "object",
    },
    "nonIbcTransition": {
      "additionalProperties": false,
      "properties": {
        "chain": {
          "additionalProperties": false,
          "properties": {
            "contract": {
              "description": "The contract address where the transition takes place, where applicable. E.g., The Ethereum contract that locks up the asset while it's minted on another chain.",
              "type": "string",
            },
          },
          "required": [
            "contract",
          ],
          "type": "object",
        },
        "counterparty": {
          "additionalProperties": false,
          "properties": {
            "baseDenom": {
              "type": "string",
            },
            "chainName": {
              "description": "The chain or platform from which the asset originates. E.g., 'cosmoshub', 'ethereum', 'forex', or 'nasdaq'",
              "type": "string",
            },
            "contract": {
              "description": "The contract address where the transition takes place, where applicable. E.g., The Ethereum contract that locks up the asset while it's minted on another chain.",
              "type": "string",
            },
          },
          "required": [
            "chainName",
            "baseDenom",
          ],
          "type": "object",
        },
        "provider": {
          "description": "The entity offering the service. E.g., 'Gravity Bridge' [Network] or 'Tether' [Company].",
          "type": "string",
        },
        "type": {
          "enum": [
            "bridge",
            "liquid-stake",
            "synthetic",
            "wrapped",
            "additional-mintage",
            "test-mintage",
          ],
          "type": "string",
        },
      },
      "required": [
        "type",
        "counterparty",
        "provider",
      ],
      "type": "object",
    },
    "pointer": {
      "additionalProperties": false,
      "description": "The (primary) key used to identify an object within the Chain Registry.",
      "properties": {
        "baseDenom": {
          "description": "The base denom of the asset from which the object originates. E.g., when describing ATOM from Cosmos Hub, specify 'uatom', NOT 'atom' nor 'ATOM'; base units are unique per platform.",
          "type": "string",
        },
        "chainName": {
          "description": "The chain name or platform from which the object resides. E.g., 'cosmoshub', 'ethereum', 'forex', or 'nasdaq'",
          "type": "string",
        },
      },
      "required": [
        "chainName",
      ],
      "type": "object",
    },
  },
  "$id": "https://osmosis.zone/assetlists.schema.json",
  "$schema": "https://json-schema.org/draft-07/schema",
  "additionalProperties": false,
  "description": "Asset lists are a similar mechanism to allow frontends and other UIs to fetch metadata associated with Cosmos SDK denoms, especially for assets sent over IBC.",
  "properties": {
    "$schema": {
      "pattern": "^(\\.\\./)+assetlist\\.schema\\.json$",
      "type": "string",
    },
    "assets": {
      "items": {
        "$ref": "#/$defs/asset",
      },
      "minContains": 1,
      "type": "array",
    },
    "chainName": {
      "type": "string",
    },
  },
  "required": [
    "chainName",
    "assets",
  ],
  "title": "Asset Lists",
  "type": "object",
}
`;

exports[`createJSONSchemaPatchOperations 1`] = `
[
  {
    "op": "renameProperty",
    "path": "/$defs/asset/properties/images/items/properties/theme",
    "value": {
      "newName": "primaryColorHex",
      "oldName": "primary_color_hex",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/asset/properties/images/items/properties/theme",
    "value": {
      "newName": "darkMode",
      "oldName": "dark_mode",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/asset/properties/images/items",
    "value": {
      "newName": "imageSync",
      "oldName": "image_sync",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/asset/properties/ibc",
    "value": {
      "newName": "sourceChannel",
      "oldName": "source_channel",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/asset/properties/ibc",
    "value": {
      "newName": "dstChannel",
      "oldName": "dst_channel",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/asset/properties/ibc",
    "value": {
      "newName": "sourceDenom",
      "oldName": "source_denom",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/ibc_transition/properties/counterparty",
    "value": {
      "newName": "chainName",
      "oldName": "chain_name",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/ibc_transition/properties/counterparty",
    "value": {
      "newName": "baseDenom",
      "oldName": "base_denom",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/ibc_transition/properties/counterparty",
    "value": {
      "newName": "channelId",
      "oldName": "channel_id",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/ibc_transition/properties/chain",
    "value": {
      "newName": "channelId",
      "oldName": "channel_id",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/ibc_cw20_transition/properties/counterparty",
    "value": {
      "newName": "chainName",
      "oldName": "chain_name",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/ibc_cw20_transition/properties/counterparty",
    "value": {
      "newName": "baseDenom",
      "oldName": "base_denom",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/ibc_cw20_transition/properties/counterparty",
    "value": {
      "newName": "channelId",
      "oldName": "channel_id",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/ibc_cw20_transition/properties/chain",
    "value": {
      "newName": "channelId",
      "oldName": "channel_id",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/non_ibc_transition/properties/counterparty",
    "value": {
      "newName": "chainName",
      "oldName": "chain_name",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/non_ibc_transition/properties/counterparty",
    "value": {
      "newName": "baseDenom",
      "oldName": "base_denom",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/asset",
    "value": {
      "newName": "extendedDescription",
      "oldName": "extended_description",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/asset",
    "value": {
      "newName": "denomUnits",
      "oldName": "denom_units",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/asset",
    "value": {
      "newName": "typeAsset",
      "oldName": "type_asset",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/asset",
    "value": {
      "newName": "logoURIs",
      "oldName": "logo_URIs",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/asset",
    "value": {
      "newName": "coingeckoId",
      "oldName": "coingecko_id",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/pointer",
    "value": {
      "newName": "chainName",
      "oldName": "chain_name",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/pointer",
    "value": {
      "newName": "baseDenom",
      "oldName": "base_denom",
    },
  },
  {
    "op": "rename",
    "path": "/$defs/denom_unit",
    "value": "denomUnit",
  },
  {
    "op": "rename",
    "path": "/$defs/ibc_transition",
    "value": "ibcTransition",
  },
  {
    "op": "rename",
    "path": "/$defs/ibc_cw20_transition",
    "value": "ibcCw20Transition",
  },
  {
    "op": "rename",
    "path": "/$defs/non_ibc_transition",
    "value": "nonIbcTransition",
  },
  {
    "op": "renameProperty",
    "path": "",
    "value": {
      "newName": "chainName",
      "oldName": "chain_name",
    },
  },
  {
    "op": "replace",
    "path": "/$defs/asset/properties/traces/items/anyOf/0/$ref",
    "value": "#/$defs/ibcTransition",
  },
  {
    "op": "replace",
    "path": "/$defs/asset/properties/traces/items/anyOf/1/$ref",
    "value": "#/$defs/ibcCw20Transition",
  },
  {
    "op": "replace",
    "path": "/$defs/asset/properties/traces/items/anyOf/2/$ref",
    "value": "#/$defs/nonIbcTransition",
  },
  {
    "op": "replace",
    "path": "/$defs/asset/properties/denomUnits/items/$ref",
    "value": "#/$defs/denomUnit",
  },
]
`;

exports[`findAllProps 1`] = `
[
  {
    "name": "primary_color_hex",
    "path": "/$defs/asset/properties/images/items/properties/theme/properties/primary_color_hex",
    "type": "property",
  },
  {
    "name": "circle",
    "path": "/$defs/asset/properties/images/items/properties/theme/properties/circle",
    "type": "property",
  },
  {
    "name": "dark_mode",
    "path": "/$defs/asset/properties/images/items/properties/theme/properties/dark_mode",
    "type": "property",
  },
  {
    "name": "#/$defs/ibc_transition",
    "path": "/$defs/asset/properties/traces/items/anyOf/0",
    "type": "$ref",
  },
  {
    "name": "0",
    "path": "/$defs/asset/properties/traces/items/anyOf/0",
    "type": "property",
  },
  {
    "name": "#/$defs/ibc_cw20_transition",
    "path": "/$defs/asset/properties/traces/items/anyOf/1",
    "type": "$ref",
  },
  {
    "name": "1",
    "path": "/$defs/asset/properties/traces/items/anyOf/1",
    "type": "property",
  },
  {
    "name": "#/$defs/non_ibc_transition",
    "path": "/$defs/asset/properties/traces/items/anyOf/2",
    "type": "$ref",
  },
  {
    "name": "2",
    "path": "/$defs/asset/properties/traces/items/anyOf/2",
    "type": "property",
  },
  {
    "name": "#/$defs/pointer",
    "path": "/$defs/asset/properties/images/items/properties/image_sync",
    "type": "$ref",
  },
  {
    "name": "image_sync",
    "path": "/$defs/asset/properties/images/items/properties/image_sync",
    "type": "property",
  },
  {
    "name": "png",
    "path": "/$defs/asset/properties/images/items/properties/png",
    "type": "property",
  },
  {
    "name": "svg",
    "path": "/$defs/asset/properties/images/items/properties/svg",
    "type": "property",
  },
  {
    "name": "theme",
    "path": "/$defs/asset/properties/images/items/properties/theme",
    "type": "property",
  },
  {
    "name": "source_channel",
    "path": "/$defs/asset/properties/ibc/properties/source_channel",
    "type": "property",
  },
  {
    "name": "dst_channel",
    "path": "/$defs/asset/properties/ibc/properties/dst_channel",
    "type": "property",
  },
  {
    "name": "source_denom",
    "path": "/$defs/asset/properties/ibc/properties/source_denom",
    "type": "property",
  },
  {
    "name": "png",
    "path": "/$defs/asset/properties/logo_URIs/properties/png",
    "type": "property",
  },
  {
    "name": "svg",
    "path": "/$defs/asset/properties/logo_URIs/properties/svg",
    "type": "property",
  },
  {
    "name": "website",
    "path": "/$defs/asset/properties/socials/properties/website",
    "type": "property",
  },
  {
    "name": "twitter",
    "path": "/$defs/asset/properties/socials/properties/twitter",
    "type": "property",
  },
  {
    "name": "chain_name",
    "path": "/$defs/ibc_transition/properties/counterparty/properties/chain_name",
    "type": "property",
  },
  {
    "name": "base_denom",
    "path": "/$defs/ibc_transition/properties/counterparty/properties/base_denom",
    "type": "property",
  },
  {
    "name": "channel_id",
    "path": "/$defs/ibc_transition/properties/counterparty/properties/channel_id",
    "type": "property",
  },
  {
    "name": "channel_id",
    "path": "/$defs/ibc_transition/properties/chain/properties/channel_id",
    "type": "property",
  },
  {
    "name": "path",
    "path": "/$defs/ibc_transition/properties/chain/properties/path",
    "type": "property",
  },
  {
    "name": "chain_name",
    "path": "/$defs/ibc_cw20_transition/properties/counterparty/properties/chain_name",
    "type": "property",
  },
  {
    "name": "base_denom",
    "path": "/$defs/ibc_cw20_transition/properties/counterparty/properties/base_denom",
    "type": "property",
  },
  {
    "name": "port",
    "path": "/$defs/ibc_cw20_transition/properties/counterparty/properties/port",
    "type": "property",
  },
  {
    "name": "channel_id",
    "path": "/$defs/ibc_cw20_transition/properties/counterparty/properties/channel_id",
    "type": "property",
  },
  {
    "name": "port",
    "path": "/$defs/ibc_cw20_transition/properties/chain/properties/port",
    "type": "property",
  },
  {
    "name": "channel_id",
    "path": "/$defs/ibc_cw20_transition/properties/chain/properties/channel_id",
    "type": "property",
  },
  {
    "name": "path",
    "path": "/$defs/ibc_cw20_transition/properties/chain/properties/path",
    "type": "property",
  },
  {
    "name": "chain_name",
    "path": "/$defs/non_ibc_transition/properties/counterparty/properties/chain_name",
    "type": "property",
  },
  {
    "name": "base_denom",
    "path": "/$defs/non_ibc_transition/properties/counterparty/properties/base_denom",
    "type": "property",
  },
  {
    "name": "contract",
    "path": "/$defs/non_ibc_transition/properties/counterparty/properties/contract",
    "type": "property",
  },
  {
    "name": "contract",
    "path": "/$defs/non_ibc_transition/properties/chain/properties/contract",
    "type": "property",
  },
  {
    "name": "#/$defs/denom_unit",
    "path": "/$defs/asset/properties/denom_units/items",
    "type": "$ref",
  },
  {
    "name": "items",
    "path": "/$defs/asset/properties/denom_units/items",
    "type": "property",
  },
  {
    "name": "items",
    "path": "/$defs/asset/properties/traces/items",
    "type": "property",
  },
  {
    "name": "items",
    "path": "/$defs/asset/properties/images/items",
    "type": "property",
  },
  {
    "name": "items",
    "path": "/$defs/asset/properties/keywords/items",
    "type": "property",
  },
  {
    "name": "items",
    "path": "/$defs/denom_unit/properties/aliases/items",
    "type": "property",
  },
  {
    "name": "deprecated",
    "path": "/$defs/asset/properties/deprecated",
    "type": "property",
  },
  {
    "name": "description",
    "path": "/$defs/asset/properties/description",
    "type": "property",
  },
  {
    "name": "extended_description",
    "path": "/$defs/asset/properties/extended_description",
    "type": "property",
  },
  {
    "name": "denom_units",
    "path": "/$defs/asset/properties/denom_units",
    "type": "property",
  },
  {
    "name": "type_asset",
    "path": "/$defs/asset/properties/type_asset",
    "type": "property",
  },
  {
    "name": "address",
    "path": "/$defs/asset/properties/address",
    "type": "property",
  },
  {
    "name": "base",
    "path": "/$defs/asset/properties/base",
    "type": "property",
  },
  {
    "name": "name",
    "path": "/$defs/asset/properties/name",
    "type": "property",
  },
  {
    "name": "display",
    "path": "/$defs/asset/properties/display",
    "type": "property",
  },
  {
    "name": "symbol",
    "path": "/$defs/asset/properties/symbol",
    "type": "property",
  },
  {
    "name": "traces",
    "path": "/$defs/asset/properties/traces",
    "type": "property",
  },
  {
    "name": "ibc",
    "path": "/$defs/asset/properties/ibc",
    "type": "property",
  },
  {
    "name": "logo_URIs",
    "path": "/$defs/asset/properties/logo_URIs",
    "type": "property",
  },
  {
    "name": "images",
    "path": "/$defs/asset/properties/images",
    "type": "property",
  },
  {
    "name": "coingecko_id",
    "path": "/$defs/asset/properties/coingecko_id",
    "type": "property",
  },
  {
    "name": "keywords",
    "path": "/$defs/asset/properties/keywords",
    "type": "property",
  },
  {
    "name": "socials",
    "path": "/$defs/asset/properties/socials",
    "type": "property",
  },
  {
    "name": "denom",
    "path": "/$defs/denom_unit/properties/denom",
    "type": "property",
  },
  {
    "name": "exponent",
    "path": "/$defs/denom_unit/properties/exponent",
    "type": "property",
  },
  {
    "name": "aliases",
    "path": "/$defs/denom_unit/properties/aliases",
    "type": "property",
  },
  {
    "name": "chain_name",
    "path": "/$defs/pointer/properties/chain_name",
    "type": "property",
  },
  {
    "name": "base_denom",
    "path": "/$defs/pointer/properties/base_denom",
    "type": "property",
  },
  {
    "name": "type",
    "path": "/$defs/ibc_transition/properties/type",
    "type": "property",
  },
  {
    "name": "counterparty",
    "path": "/$defs/ibc_transition/properties/counterparty",
    "type": "property",
  },
  {
    "name": "chain",
    "path": "/$defs/ibc_transition/properties/chain",
    "type": "property",
  },
  {
    "name": "type",
    "path": "/$defs/ibc_cw20_transition/properties/type",
    "type": "property",
  },
  {
    "name": "counterparty",
    "path": "/$defs/ibc_cw20_transition/properties/counterparty",
    "type": "property",
  },
  {
    "name": "chain",
    "path": "/$defs/ibc_cw20_transition/properties/chain",
    "type": "property",
  },
  {
    "name": "type",
    "path": "/$defs/non_ibc_transition/properties/type",
    "type": "property",
  },
  {
    "name": "counterparty",
    "path": "/$defs/non_ibc_transition/properties/counterparty",
    "type": "property",
  },
  {
    "name": "chain",
    "path": "/$defs/non_ibc_transition/properties/chain",
    "type": "property",
  },
  {
    "name": "provider",
    "path": "/$defs/non_ibc_transition/properties/provider",
    "type": "property",
  },
  {
    "name": "#/$defs/asset",
    "path": "/properties/assets/items",
    "type": "$ref",
  },
  {
    "name": "items",
    "path": "/properties/assets/items",
    "type": "property",
  },
  {
    "name": "$schema",
    "path": "/properties/$schema",
    "type": "property",
  },
  {
    "name": "chain_name",
    "path": "/properties/chain_name",
    "type": "property",
  },
  {
    "name": "assets",
    "path": "/properties/assets",
    "type": "property",
  },
  {
    "name": "asset",
    "path": "/$defs/asset",
    "type": "$def",
  },
  {
    "name": "denom_unit",
    "path": "/$defs/denom_unit",
    "type": "$def",
  },
  {
    "name": "pointer",
    "path": "/$defs/pointer",
    "type": "$def",
  },
  {
    "name": "ibc_transition",
    "path": "/$defs/ibc_transition",
    "type": "$def",
  },
  {
    "name": "ibc_cw20_transition",
    "path": "/$defs/ibc_cw20_transition",
    "type": "$def",
  },
  {
    "name": "non_ibc_transition",
    "path": "/$defs/non_ibc_transition",
    "type": "$def",
  },
]
`;
