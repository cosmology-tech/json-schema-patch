// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JSONSchemaPatch transformer 1`] = `
{
  "$defs": {
    "endpoint": {
      "additionalProperties": false,
      "properties": {
        "address": {
          "type": "string",
        },
        "archive": {
          "default": false,
          "type": "boolean",
        },
        "provider": {
          "type": "string",
        },
      },
      "required": [
        "address",
      ],
      "type": "object",
    },
    "explorer": {
      "additionalProperties": false,
      "properties": {
        "accountPage": {
          "type": "string",
        },
        "kind": {
          "type": "string",
        },
        "txPage": {
          "type": "string",
        },
        "url": {
          "type": "string",
        },
      },
      "type": "object",
    },
    "feeToken": {
      "additionalProperties": false,
      "properties": {
        "averageGasPrice": {
          "type": "number",
        },
        "denom": {
          "type": "string",
        },
        "fixedMinGasPrice": {
          "type": "number",
        },
        "gasCosts": {
          "additionalProperties": false,
          "minProperties": 1,
          "properties": {
            "cosmosSend": {
              "type": "number",
            },
            "ibcTransfer": {
              "type": "number",
            },
          },
          "type": "object",
        },
        "highGasPrice": {
          "type": "number",
        },
        "lowGasPrice": {
          "type": "number",
        },
      },
      "required": [
        "denom",
      ],
      "type": "object",
    },
    "peer": {
      "additionalProperties": false,
      "properties": {
        "address": {
          "type": "string",
        },
        "id": {
          "type": "string",
        },
        "provider": {
          "type": "string",
        },
      },
      "required": [
        "id",
        "address",
      ],
      "type": "object",
    },
    "pointer": {
      "additionalProperties": false,
      "description": "The (primary) key used to identify an object within the Chain Registry.",
      "properties": {
        "baseDenom": {
          "description": "The base denom of the asset from which the object originates. E.g., when describing ATOM from Cosmos Hub, specify 'uatom', NOT 'atom' nor 'ATOM'; base units are unique per platform.",
          "type": "string",
        },
        "chainName": {
          "description": "The chain name or platform from which the object resides. E.g., 'cosmoshub', 'ethereum', 'forex', or 'nasdaq'",
          "type": "string",
        },
      },
      "required": [
        "chainName",
      ],
      "type": "object",
    },
    "stakingToken": {
      "additionalProperties": false,
      "properties": {
        "denom": {
          "type": "string",
        },
      },
      "required": [
        "denom",
      ],
      "type": "object",
    },
  },
  "$id": "https://sikka.tech/chain.schema.json",
  "$schema": "https://json-schema.org/draft-07/schema",
  "additionalProperties": false,
  "description": "Chain.json is a metadata file that contains information about a blockchain.",
  "properties": {
    "$schema": {
      "pattern": "^(\\.\\./)+chain\\.schema\\.json$",
      "type": "string",
    },
    "alternativeSlip44s": {
      "items": {
        "type": "number",
      },
      "type": "array",
    },
    "apis": {
      "additionalProperties": false,
      "properties": {
        "evm-http-jsonrpc": {
          "items": {
            "$ref": "#/$defs/endpoint",
          },
          "type": "array",
        },
        "grpc": {
          "items": {
            "$ref": "#/$defs/endpoint",
          },
          "type": "array",
        },
        "grpc-web": {
          "items": {
            "$ref": "#/$defs/endpoint",
          },
          "type": "array",
        },
        "rest": {
          "items": {
            "$ref": "#/$defs/endpoint",
          },
          "type": "array",
        },
        "rpc": {
          "items": {
            "$ref": "#/$defs/endpoint",
          },
          "type": "array",
        },
        "wss": {
          "items": {
            "$ref": "#/$defs/endpoint",
          },
          "type": "array",
        },
      },
      "type": "object",
    },
    "bech32Config": {
      "additionalProperties": false,
      "description": "Used to override the bech32_prefix for specific uses.",
      "minProperties": 1,
      "properties": {
        "bech32PrefixAccAddr": {
          "description": "e.g., 'cosmos'",
          "type": "string",
        },
        "bech32PrefixAccPub": {
          "description": "e.g., 'cosmospub'",
          "type": "string",
        },
        "bech32PrefixConsAddr": {
          "description": "e.g., 'cosmosvalcons'",
          "type": "string",
        },
        "bech32PrefixConsPub": {
          "description": "e.g., 'cosmosvalconspub'",
          "type": "string",
        },
        "bech32PrefixValAddr": {
          "description": "e.g., 'cosmosvaloper'",
          "type": "string",
        },
        "bech32PrefixValPub": {
          "description": "e.g., 'cosmosvaloperpub'",
          "type": "string",
        },
      },
      "type": "object",
    },
    "bech32Prefix": {
      "description": "The default prefix for the human-readable part of addresses that identifies the coin type. Must be registered with SLIP-0173. E.g., 'cosmos'",
      "type": "string",
    },
    "chainId": {
      "type": "string",
    },
    "chainName": {
      "pattern": "[a-z0-9]+",
      "type": "string",
    },
    "codebase": {
      "additionalProperties": false,
      "properties": {
        "binaries": {
          "additionalProperties": false,
          "properties": {
            "darwin/amd64": {
              "format": "uri",
              "type": "string",
            },
            "darwin/arm64": {
              "format": "uri",
              "type": "string",
            },
            "linux/amd64": {
              "format": "uri",
              "type": "string",
            },
            "linux/arm64": {
              "format": "uri",
              "type": "string",
            },
            "windows/amd64": {
              "format": "uri",
              "type": "string",
            },
            "windows/arm64": {
              "format": "uri",
              "type": "string",
            },
          },
          "type": "object",
        },
        "compatibleVersions": {
          "items": {
            "type": "string",
          },
          "type": "array",
        },
        "consensus": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "enum": [
                "tendermint",
                "cometbft",
                "sei-tendermint",
              ],
              "type": "string",
            },
            "version": {
              "type": "string",
            },
          },
          "required": [
            "type",
          ],
          "type": "object",
        },
        "cosmosSdkVersion": {
          "type": "string",
        },
        "cosmwasmEnabled": {
          "type": "boolean",
        },
        "cosmwasmPath": {
          "description": "Relative path to the cosmwasm directory. ex. $HOME/.juno/data/wasm",
          "pattern": "^\\$HOME.*$",
          "type": "string",
        },
        "cosmwasmVersion": {
          "type": "string",
        },
        "genesis": {
          "additionalProperties": false,
          "properties": {
            "genesisUrl": {
              "format": "uri",
              "type": "string",
            },
            "icsCcvUrl": {
              "format": "uri",
              "type": "string",
            },
            "name": {
              "type": "string",
            },
          },
          "required": [
            "genesisUrl",
          ],
          "type": "object",
        },
        "gitRepo": {
          "format": "uri",
          "type": "string",
        },
        "goVersion": {
          "description": "Minimum accepted go version to build the binary.",
          "pattern": "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$",
          "type": "string",
        },
        "ibcGoVersion": {
          "type": "string",
        },
        "icsEnabled": {
          "description": "List of IBC apps (usually corresponding to a ICS standard) which have been enabled on the network.",
          "items": {
            "description": "IBC app or ICS standard.",
            "enum": [
              "ics20-1",
              "ics27-1",
              "mauth",
            ],
            "type": "string",
          },
          "type": "array",
        },
        "recommendedVersion": {
          "type": "string",
        },
        "versions": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "binaries": {
                "additionalProperties": false,
                "properties": {
                  "darwin/amd64": {
                    "format": "uri",
                    "type": "string",
                  },
                  "darwin/arm64": {
                    "format": "uri",
                    "type": "string",
                  },
                  "linux/amd64": {
                    "format": "uri",
                    "type": "string",
                  },
                  "linux/arm64": {
                    "format": "uri",
                    "type": "string",
                  },
                  "windows/amd64": {
                    "format": "uri",
                    "type": "string",
                  },
                  "windows/arm64": {
                    "format": "uri",
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "compatibleVersions": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "consensus": {
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "enum": [
                      "tendermint",
                      "cometbft",
                      "sei-tendermint",
                    ],
                    "type": "string",
                  },
                  "version": {
                    "type": "string",
                  },
                },
                "required": [
                  "type",
                ],
                "type": "object",
              },
              "cosmosSdkVersion": {
                "type": "string",
              },
              "cosmwasmEnabled": {
                "type": "boolean",
              },
              "cosmwasmPath": {
                "description": "Relative path to the cosmwasm directory. ex. $HOME/.juno/data/wasm",
                "pattern": "^\\$HOME.*$",
                "type": "string",
              },
              "cosmwasmVersion": {
                "type": "string",
              },
              "goVersion": {
                "description": "Minimum accepted go version to build the binary.",
                "pattern": "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$",
                "type": "string",
              },
              "height": {
                "description": "Block Height",
                "type": "number",
              },
              "ibcGoVersion": {
                "type": "string",
              },
              "icsEnabled": {
                "description": "List of IBC apps (usually corresponding to a ICS standard) which have been enabled on the network.",
                "items": {
                  "description": "IBC app or ICS standard.",
                  "enum": [
                    "ics20-1",
                    "ics27-1",
                    "mauth",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
              "name": {
                "description": "Official Upgrade Name",
                "type": "string",
              },
              "nextVersionName": {
                "description": "[Optional] Name of the following version",
                "type": "string",
              },
              "previousVersionName": {
                "description": "[Optional] Name of the previous version",
                "type": "string",
              },
              "proposal": {
                "description": "Proposal that will officially signal community acceptance of the upgrade.",
                "type": "number",
              },
              "recommendedVersion": {
                "type": "string",
              },
              "tag": {
                "description": "Git Upgrade Tag",
                "type": "string",
              },
            },
            "required": [
              "name",
            ],
            "type": "object",
          },
          "type": "array",
        },
      },
      "type": "object",
    },
    "daemonName": {
      "type": "string",
    },
    "description": {
      "maxLength": 3000,
      "type": "string",
    },
    "explorers": {
      "items": {
        "$ref": "#/$defs/explorer",
      },
      "type": "array",
    },
    "extraCodecs": {
      "items": {
        "enum": [
          "ethermint",
          "injective",
        ],
        "type": "string",
        "uniqueItems": true,
      },
      "type": "array",
    },
    "fees": {
      "additionalProperties": false,
      "properties": {
        "feeTokens": {
          "items": {
            "$ref": "#/$defs/feeToken",
          },
          "type": "array",
        },
      },
      "required": [
        "feeTokens",
      ],
      "type": "object",
    },
    "images": {
      "items": {
        "additionalProperties": false,
        "anyOf": [
          {
            "required": [
              "png",
            ],
          },
          {
            "required": [
              "svg",
            ],
          },
        ],
        "if": {
          "properties": {
            "layout": {
              "const": "logo",
            },
          },
          "required": [
            "layout",
          ],
        },
        "properties": {
          "imageSync": {
            "$ref": "#/$defs/pointer",
          },
          "layout": {
            "description": "logomark == icon only; logotype == text only; logo == icon + text.",
            "enum": [
              "logo",
              "logomark",
              "logotype",
            ],
            "type": "string",
          },
          "png": {
            "format": "uri-reference",
            "pattern": "^https://raw\\.githubusercontent\\.com/cosmos/chain-registry/master/(|testnets/|_non-cosmos/)[a-z0-9]+/images/.+\\.png$",
            "type": "string",
          },
          "svg": {
            "format": "uri-reference",
            "pattern": "^https://raw\\.githubusercontent\\.com/cosmos/chain-registry/master/(|testnets/|_non-cosmos/)[a-z0-9]+/images/.+\\.svg$",
            "type": "string",
          },
          "textPosition": {
            "description": "Indicates in which position the text is placed, in case the layout is 'icon' type, it's required only in this case.",
            "enum": [
              "top",
              "bottom",
              "left",
              "right",
              "integrated",
            ],
            "type": "string",
          },
          "theme": {
            "additionalProperties": false,
            "minProperties": 1,
            "properties": {
              "circle": {
                "type": "boolean",
              },
              "darkMode": {
                "type": "boolean",
              },
              "primaryColorHex": {
                "pattern": "^#[0-9a-fA-F]{6}$",
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "then": {
          "required": [
            "text_position",
          ],
        },
        "type": "object",
      },
      "type": "array",
    },
    "keyAlgos": {
      "items": {
        "enum": [
          "secp256k1",
          "ethsecp256k1",
          "ed25519",
          "sr25519",
          "bn254",
        ],
        "type": "string",
        "uniqueItems": true,
      },
      "type": "array",
    },
    "keywords": {
      "items": {
        "type": "string",
      },
      "maxContains": 20,
      "type": "array",
    },
    "logoURIs": {
      "additionalProperties": false,
      "properties": {
        "png": {
          "format": "uri-reference",
          "pattern": "^https://raw\\.githubusercontent\\.com/cosmos/chain-registry/master/(|testnets/|_non-cosmos/)[a-z0-9]+/images/.+\\.png$",
          "type": "string",
        },
        "svg": {
          "format": "uri-reference",
          "pattern": "^https://raw\\.githubusercontent\\.com/cosmos/chain-registry/master/(|testnets/|_non-cosmos/)[a-z0-9]+/images/.+\\.svg$",
          "type": "string",
        },
      },
      "type": "object",
    },
    "networkType": {
      "enum": [
        "mainnet",
        "testnet",
        "devnet",
      ],
    },
    "nodeHome": {
      "type": "string",
    },
    "peers": {
      "additionalProperties": false,
      "properties": {
        "persistentPeers": {
          "items": {
            "$ref": "#/$defs/peer",
          },
          "type": "array",
        },
        "seeds": {
          "items": {
            "$ref": "#/$defs/peer",
          },
          "type": "array",
        },
      },
      "type": "object",
    },
    "preForkChainName": {
      "pattern": "[a-z0-9]+",
      "type": "string",
    },
    "prettyName": {
      "type": "string",
    },
    "slip44": {
      "type": "number",
    },
    "staking": {
      "additionalProperties": false,
      "properties": {
        "lockDuration": {
          "additionalProperties": false,
          "minProperties": 1,
          "properties": {
            "blocks": {
              "description": "The number of blocks for which the staked tokens are locked.",
              "type": "number",
            },
            "time": {
              "description": "The approximate time for which the staked tokens are locked.",
              "type": "string",
            },
          },
          "type": "object",
        },
        "stakingTokens": {
          "items": {
            "$ref": "#/$defs/stakingToken",
          },
          "type": "array",
        },
      },
      "required": [
        "stakingTokens",
      ],
      "type": "object",
    },
    "status": {
      "enum": [
        "live",
        "upcoming",
        "killed",
      ],
    },
    "updateLink": {
      "format": "uri",
      "type": "string",
    },
    "website": {
      "format": "uri",
      "type": "string",
    },
  },
  "required": [
    "chainName",
    "chainId",
    "bech32Prefix",
  ],
  "title": "Chain",
  "type": "object",
}
`;

exports[`createJSONSchemaPatchOperations 1`] = `
[
  {
    "op": "renameProperty",
    "path": "/properties/codebase/properties/versions/items",
    "value": {
      "newName": "previousVersionName",
      "oldName": "previous_version_name",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase/properties/versions/items",
    "value": {
      "newName": "nextVersionName",
      "oldName": "next_version_name",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase/properties/versions/items",
    "value": {
      "newName": "recommendedVersion",
      "oldName": "recommended_version",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase/properties/versions/items",
    "value": {
      "newName": "goVersion",
      "oldName": "go_version",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase/properties/versions/items",
    "value": {
      "newName": "compatibleVersions",
      "oldName": "compatible_versions",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase/properties/versions/items",
    "value": {
      "newName": "cosmosSdkVersion",
      "oldName": "cosmos_sdk_version",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase/properties/versions/items",
    "value": {
      "newName": "cosmwasmVersion",
      "oldName": "cosmwasm_version",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase/properties/versions/items",
    "value": {
      "newName": "cosmwasmEnabled",
      "oldName": "cosmwasm_enabled",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase/properties/versions/items",
    "value": {
      "newName": "cosmwasmPath",
      "oldName": "cosmwasm_path",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase/properties/versions/items",
    "value": {
      "newName": "ibcGoVersion",
      "oldName": "ibc_go_version",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase/properties/versions/items",
    "value": {
      "newName": "icsEnabled",
      "oldName": "ics_enabled",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/images/items/properties/theme",
    "value": {
      "newName": "primaryColorHex",
      "oldName": "primary_color_hex",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/images/items/properties/theme",
    "value": {
      "newName": "darkMode",
      "oldName": "dark_mode",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase/properties/genesis",
    "value": {
      "newName": "genesisUrl",
      "oldName": "genesis_url",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase/properties/genesis",
    "value": {
      "newName": "icsCcvUrl",
      "oldName": "ics_ccv_url",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/fee_token/properties/gas_costs",
    "value": {
      "newName": "cosmosSend",
      "oldName": "cosmos_send",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/fee_token/properties/gas_costs",
    "value": {
      "newName": "ibcTransfer",
      "oldName": "ibc_transfer",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/images/items",
    "value": {
      "newName": "imageSync",
      "oldName": "image_sync",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/images/items",
    "value": {
      "newName": "textPosition",
      "oldName": "text_position",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/fees",
    "value": {
      "newName": "feeTokens",
      "oldName": "fee_tokens",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/staking",
    "value": {
      "newName": "stakingTokens",
      "oldName": "staking_tokens",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/staking",
    "value": {
      "newName": "lockDuration",
      "oldName": "lock_duration",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase",
    "value": {
      "newName": "gitRepo",
      "oldName": "git_repo",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase",
    "value": {
      "newName": "recommendedVersion",
      "oldName": "recommended_version",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase",
    "value": {
      "newName": "goVersion",
      "oldName": "go_version",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase",
    "value": {
      "newName": "compatibleVersions",
      "oldName": "compatible_versions",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase",
    "value": {
      "newName": "cosmosSdkVersion",
      "oldName": "cosmos_sdk_version",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase",
    "value": {
      "newName": "cosmwasmVersion",
      "oldName": "cosmwasm_version",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase",
    "value": {
      "newName": "cosmwasmEnabled",
      "oldName": "cosmwasm_enabled",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase",
    "value": {
      "newName": "cosmwasmPath",
      "oldName": "cosmwasm_path",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase",
    "value": {
      "newName": "ibcGoVersion",
      "oldName": "ibc_go_version",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/codebase",
    "value": {
      "newName": "icsEnabled",
      "oldName": "ics_enabled",
    },
  },
  {
    "op": "renameProperty",
    "path": "/properties/peers",
    "value": {
      "newName": "persistentPeers",
      "oldName": "persistent_peers",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/explorer",
    "value": {
      "newName": "txPage",
      "oldName": "tx_page",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/explorer",
    "value": {
      "newName": "accountPage",
      "oldName": "account_page",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/fee_token",
    "value": {
      "newName": "fixedMinGasPrice",
      "oldName": "fixed_min_gas_price",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/fee_token",
    "value": {
      "newName": "lowGasPrice",
      "oldName": "low_gas_price",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/fee_token",
    "value": {
      "newName": "averageGasPrice",
      "oldName": "average_gas_price",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/fee_token",
    "value": {
      "newName": "highGasPrice",
      "oldName": "high_gas_price",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/fee_token",
    "value": {
      "newName": "gasCosts",
      "oldName": "gas_costs",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/pointer",
    "value": {
      "newName": "chainName",
      "oldName": "chain_name",
    },
  },
  {
    "op": "renameProperty",
    "path": "/$defs/pointer",
    "value": {
      "newName": "baseDenom",
      "oldName": "base_denom",
    },
  },
  {
    "op": "rename",
    "path": "/$defs/fee_token",
    "value": "feeToken",
  },
  {
    "op": "rename",
    "path": "/$defs/staking_token",
    "value": "stakingToken",
  },
  {
    "op": "renameProperty",
    "path": "",
    "value": {
      "newName": "chainName",
      "oldName": "chain_name",
    },
  },
  {
    "op": "renameProperty",
    "path": "",
    "value": {
      "newName": "chainId",
      "oldName": "chain_id",
    },
  },
  {
    "op": "renameProperty",
    "path": "",
    "value": {
      "newName": "preForkChainName",
      "oldName": "pre_fork_chain_name",
    },
  },
  {
    "op": "renameProperty",
    "path": "",
    "value": {
      "newName": "prettyName",
      "oldName": "pretty_name",
    },
  },
  {
    "op": "renameProperty",
    "path": "",
    "value": {
      "newName": "updateLink",
      "oldName": "update_link",
    },
  },
  {
    "op": "renameProperty",
    "path": "",
    "value": {
      "newName": "networkType",
      "oldName": "network_type",
    },
  },
  {
    "op": "renameProperty",
    "path": "",
    "value": {
      "newName": "bech32Prefix",
      "oldName": "bech32_prefix",
    },
  },
  {
    "op": "renameProperty",
    "path": "",
    "value": {
      "newName": "bech32Config",
      "oldName": "bech32_config",
    },
  },
  {
    "op": "renameProperty",
    "path": "",
    "value": {
      "newName": "daemonName",
      "oldName": "daemon_name",
    },
  },
  {
    "op": "renameProperty",
    "path": "",
    "value": {
      "newName": "nodeHome",
      "oldName": "node_home",
    },
  },
  {
    "op": "renameProperty",
    "path": "",
    "value": {
      "newName": "keyAlgos",
      "oldName": "key_algos",
    },
  },
  {
    "op": "renameProperty",
    "path": "",
    "value": {
      "newName": "alternativeSlip44s",
      "oldName": "alternative_slip44s",
    },
  },
  {
    "op": "renameProperty",
    "path": "",
    "value": {
      "newName": "logoURIs",
      "oldName": "logo_URIs",
    },
  },
  {
    "op": "renameProperty",
    "path": "",
    "value": {
      "newName": "extraCodecs",
      "oldName": "extra_codecs",
    },
  },
  {
    "op": "replace",
    "path": "/properties/fees/properties/feeTokens/items/$ref",
    "value": "#/$defs/feeToken",
  },
  {
    "op": "replace",
    "path": "/properties/staking/properties/stakingTokens/items/$ref",
    "value": "#/$defs/stakingToken",
  },
]
`;

exports[`findAllProps 1`] = `
[
  {
    "name": "amd64",
    "path": "/properties/codebase/properties/versions/items/properties/binaries/properties/linux/amd64",
    "type": "property",
  },
  {
    "name": "arm64",
    "path": "/properties/codebase/properties/versions/items/properties/binaries/properties/linux/arm64",
    "type": "property",
  },
  {
    "name": "amd64",
    "path": "/properties/codebase/properties/versions/items/properties/binaries/properties/darwin/amd64",
    "type": "property",
  },
  {
    "name": "arm64",
    "path": "/properties/codebase/properties/versions/items/properties/binaries/properties/darwin/arm64",
    "type": "property",
  },
  {
    "name": "amd64",
    "path": "/properties/codebase/properties/versions/items/properties/binaries/properties/windows/amd64",
    "type": "property",
  },
  {
    "name": "arm64",
    "path": "/properties/codebase/properties/versions/items/properties/binaries/properties/windows/arm64",
    "type": "property",
  },
  {
    "name": "type",
    "path": "/properties/codebase/properties/versions/items/properties/consensus/properties/type",
    "type": "property",
  },
  {
    "name": "version",
    "path": "/properties/codebase/properties/versions/items/properties/consensus/properties/version",
    "type": "property",
  },
  {
    "name": "items",
    "path": "/properties/codebase/properties/versions/items/properties/compatible_versions/items",
    "type": "property",
  },
  {
    "name": "items",
    "path": "/properties/codebase/properties/versions/items/properties/ics_enabled/items",
    "type": "property",
  },
  {
    "name": "amd64",
    "path": "/properties/codebase/properties/binaries/properties/linux/amd64",
    "type": "property",
  },
  {
    "name": "arm64",
    "path": "/properties/codebase/properties/binaries/properties/linux/arm64",
    "type": "property",
  },
  {
    "name": "amd64",
    "path": "/properties/codebase/properties/binaries/properties/darwin/amd64",
    "type": "property",
  },
  {
    "name": "arm64",
    "path": "/properties/codebase/properties/binaries/properties/darwin/arm64",
    "type": "property",
  },
  {
    "name": "amd64",
    "path": "/properties/codebase/properties/binaries/properties/windows/amd64",
    "type": "property",
  },
  {
    "name": "arm64",
    "path": "/properties/codebase/properties/binaries/properties/windows/arm64",
    "type": "property",
  },
  {
    "name": "name",
    "path": "/properties/codebase/properties/versions/items/properties/name",
    "type": "property",
  },
  {
    "name": "tag",
    "path": "/properties/codebase/properties/versions/items/properties/tag",
    "type": "property",
  },
  {
    "name": "height",
    "path": "/properties/codebase/properties/versions/items/properties/height",
    "type": "property",
  },
  {
    "name": "proposal",
    "path": "/properties/codebase/properties/versions/items/properties/proposal",
    "type": "property",
  },
  {
    "name": "previous_version_name",
    "path": "/properties/codebase/properties/versions/items/properties/previous_version_name",
    "type": "property",
  },
  {
    "name": "next_version_name",
    "path": "/properties/codebase/properties/versions/items/properties/next_version_name",
    "type": "property",
  },
  {
    "name": "recommended_version",
    "path": "/properties/codebase/properties/versions/items/properties/recommended_version",
    "type": "property",
  },
  {
    "name": "go_version",
    "path": "/properties/codebase/properties/versions/items/properties/go_version",
    "type": "property",
  },
  {
    "name": "compatible_versions",
    "path": "/properties/codebase/properties/versions/items/properties/compatible_versions",
    "type": "property",
  },
  {
    "name": "cosmos_sdk_version",
    "path": "/properties/codebase/properties/versions/items/properties/cosmos_sdk_version",
    "type": "property",
  },
  {
    "name": "consensus",
    "path": "/properties/codebase/properties/versions/items/properties/consensus",
    "type": "property",
  },
  {
    "name": "cosmwasm_version",
    "path": "/properties/codebase/properties/versions/items/properties/cosmwasm_version",
    "type": "property",
  },
  {
    "name": "cosmwasm_enabled",
    "path": "/properties/codebase/properties/versions/items/properties/cosmwasm_enabled",
    "type": "property",
  },
  {
    "name": "cosmwasm_path",
    "path": "/properties/codebase/properties/versions/items/properties/cosmwasm_path",
    "type": "property",
  },
  {
    "name": "ibc_go_version",
    "path": "/properties/codebase/properties/versions/items/properties/ibc_go_version",
    "type": "property",
  },
  {
    "name": "ics_enabled",
    "path": "/properties/codebase/properties/versions/items/properties/ics_enabled",
    "type": "property",
  },
  {
    "name": "binaries",
    "path": "/properties/codebase/properties/versions/items/properties/binaries",
    "type": "property",
  },
  {
    "name": "primary_color_hex",
    "path": "/properties/images/items/properties/theme/properties/primary_color_hex",
    "type": "property",
  },
  {
    "name": "circle",
    "path": "/properties/images/items/properties/theme/properties/circle",
    "type": "property",
  },
  {
    "name": "dark_mode",
    "path": "/properties/images/items/properties/theme/properties/dark_mode",
    "type": "property",
  },
  {
    "name": "blocks",
    "path": "/properties/staking/properties/lock_duration/properties/blocks",
    "type": "property",
  },
  {
    "name": "time",
    "path": "/properties/staking/properties/lock_duration/properties/time",
    "type": "property",
  },
  {
    "name": "type",
    "path": "/properties/codebase/properties/consensus/properties/type",
    "type": "property",
  },
  {
    "name": "version",
    "path": "/properties/codebase/properties/consensus/properties/version",
    "type": "property",
  },
  {
    "name": "name",
    "path": "/properties/codebase/properties/genesis/properties/name",
    "type": "property",
  },
  {
    "name": "genesis_url",
    "path": "/properties/codebase/properties/genesis/properties/genesis_url",
    "type": "property",
  },
  {
    "name": "ics_ccv_url",
    "path": "/properties/codebase/properties/genesis/properties/ics_ccv_url",
    "type": "property",
  },
  {
    "name": "cosmos_send",
    "path": "/$defs/fee_token/properties/gas_costs/properties/cosmos_send",
    "type": "property",
  },
  {
    "name": "ibc_transfer",
    "path": "/$defs/fee_token/properties/gas_costs/properties/ibc_transfer",
    "type": "property",
  },
  {
    "name": "#/$defs/fee_token",
    "path": "/properties/fees/properties/fee_tokens/items",
    "type": "$ref",
  },
  {
    "name": "items",
    "path": "/properties/fees/properties/fee_tokens/items",
    "type": "property",
  },
  {
    "name": "#/$defs/staking_token",
    "path": "/properties/staking/properties/staking_tokens/items",
    "type": "$ref",
  },
  {
    "name": "items",
    "path": "/properties/staking/properties/staking_tokens/items",
    "type": "property",
  },
  {
    "name": "items",
    "path": "/properties/codebase/properties/compatible_versions/items",
    "type": "property",
  },
  {
    "name": "items",
    "path": "/properties/codebase/properties/ics_enabled/items",
    "type": "property",
  },
  {
    "name": "items",
    "path": "/properties/codebase/properties/versions/items",
    "type": "property",
  },
  {
    "name": "#/$defs/pointer",
    "path": "/properties/images/items/properties/image_sync",
    "type": "$ref",
  },
  {
    "name": "image_sync",
    "path": "/properties/images/items/properties/image_sync",
    "type": "property",
  },
  {
    "name": "png",
    "path": "/properties/images/items/properties/png",
    "type": "property",
  },
  {
    "name": "svg",
    "path": "/properties/images/items/properties/svg",
    "type": "property",
  },
  {
    "name": "theme",
    "path": "/properties/images/items/properties/theme",
    "type": "property",
  },
  {
    "name": "layout",
    "path": "/properties/images/items/properties/layout",
    "type": "property",
  },
  {
    "name": "text_position",
    "path": "/properties/images/items/properties/text_position",
    "type": "property",
  },
  {
    "name": "0",
    "path": "/properties/images/items/anyOf/0",
    "type": "property",
  },
  {
    "name": "1",
    "path": "/properties/images/items/anyOf/1",
    "type": "property",
  },
  {
    "name": "#/$defs/peer",
    "path": "/properties/peers/properties/seeds/items",
    "type": "$ref",
  },
  {
    "name": "items",
    "path": "/properties/peers/properties/seeds/items",
    "type": "property",
  },
  {
    "name": "#/$defs/peer",
    "path": "/properties/peers/properties/persistent_peers/items",
    "type": "$ref",
  },
  {
    "name": "items",
    "path": "/properties/peers/properties/persistent_peers/items",
    "type": "property",
  },
  {
    "name": "#/$defs/endpoint",
    "path": "/properties/apis/properties/rpc/items",
    "type": "$ref",
  },
  {
    "name": "items",
    "path": "/properties/apis/properties/rpc/items",
    "type": "property",
  },
  {
    "name": "#/$defs/endpoint",
    "path": "/properties/apis/properties/rest/items",
    "type": "$ref",
  },
  {
    "name": "items",
    "path": "/properties/apis/properties/rest/items",
    "type": "property",
  },
  {
    "name": "#/$defs/endpoint",
    "path": "/properties/apis/properties/grpc/items",
    "type": "$ref",
  },
  {
    "name": "items",
    "path": "/properties/apis/properties/grpc/items",
    "type": "property",
  },
  {
    "name": "#/$defs/endpoint",
    "path": "/properties/apis/properties/wss/items",
    "type": "$ref",
  },
  {
    "name": "items",
    "path": "/properties/apis/properties/wss/items",
    "type": "property",
  },
  {
    "name": "#/$defs/endpoint",
    "path": "/properties/apis/properties/grpc-web/items",
    "type": "$ref",
  },
  {
    "name": "items",
    "path": "/properties/apis/properties/grpc-web/items",
    "type": "property",
  },
  {
    "name": "#/$defs/endpoint",
    "path": "/properties/apis/properties/evm-http-jsonrpc/items",
    "type": "$ref",
  },
  {
    "name": "items",
    "path": "/properties/apis/properties/evm-http-jsonrpc/items",
    "type": "property",
  },
  {
    "name": "bech32PrefixAccAddr",
    "path": "/properties/bech32_config/properties/bech32PrefixAccAddr",
    "type": "property",
  },
  {
    "name": "bech32PrefixAccPub",
    "path": "/properties/bech32_config/properties/bech32PrefixAccPub",
    "type": "property",
  },
  {
    "name": "bech32PrefixValAddr",
    "path": "/properties/bech32_config/properties/bech32PrefixValAddr",
    "type": "property",
  },
  {
    "name": "bech32PrefixValPub",
    "path": "/properties/bech32_config/properties/bech32PrefixValPub",
    "type": "property",
  },
  {
    "name": "bech32PrefixConsAddr",
    "path": "/properties/bech32_config/properties/bech32PrefixConsAddr",
    "type": "property",
  },
  {
    "name": "bech32PrefixConsPub",
    "path": "/properties/bech32_config/properties/bech32PrefixConsPub",
    "type": "property",
  },
  {
    "name": "fee_tokens",
    "path": "/properties/fees/properties/fee_tokens",
    "type": "property",
  },
  {
    "name": "staking_tokens",
    "path": "/properties/staking/properties/staking_tokens",
    "type": "property",
  },
  {
    "name": "lock_duration",
    "path": "/properties/staking/properties/lock_duration",
    "type": "property",
  },
  {
    "name": "git_repo",
    "path": "/properties/codebase/properties/git_repo",
    "type": "property",
  },
  {
    "name": "recommended_version",
    "path": "/properties/codebase/properties/recommended_version",
    "type": "property",
  },
  {
    "name": "go_version",
    "path": "/properties/codebase/properties/go_version",
    "type": "property",
  },
  {
    "name": "compatible_versions",
    "path": "/properties/codebase/properties/compatible_versions",
    "type": "property",
  },
  {
    "name": "binaries",
    "path": "/properties/codebase/properties/binaries",
    "type": "property",
  },
  {
    "name": "cosmos_sdk_version",
    "path": "/properties/codebase/properties/cosmos_sdk_version",
    "type": "property",
  },
  {
    "name": "consensus",
    "path": "/properties/codebase/properties/consensus",
    "type": "property",
  },
  {
    "name": "cosmwasm_version",
    "path": "/properties/codebase/properties/cosmwasm_version",
    "type": "property",
  },
  {
    "name": "cosmwasm_enabled",
    "path": "/properties/codebase/properties/cosmwasm_enabled",
    "type": "property",
  },
  {
    "name": "cosmwasm_path",
    "path": "/properties/codebase/properties/cosmwasm_path",
    "type": "property",
  },
  {
    "name": "ibc_go_version",
    "path": "/properties/codebase/properties/ibc_go_version",
    "type": "property",
  },
  {
    "name": "ics_enabled",
    "path": "/properties/codebase/properties/ics_enabled",
    "type": "property",
  },
  {
    "name": "genesis",
    "path": "/properties/codebase/properties/genesis",
    "type": "property",
  },
  {
    "name": "versions",
    "path": "/properties/codebase/properties/versions",
    "type": "property",
  },
  {
    "name": "png",
    "path": "/properties/logo_URIs/properties/png",
    "type": "property",
  },
  {
    "name": "svg",
    "path": "/properties/logo_URIs/properties/svg",
    "type": "property",
  },
  {
    "name": "seeds",
    "path": "/properties/peers/properties/seeds",
    "type": "property",
  },
  {
    "name": "persistent_peers",
    "path": "/properties/peers/properties/persistent_peers",
    "type": "property",
  },
  {
    "name": "rpc",
    "path": "/properties/apis/properties/rpc",
    "type": "property",
  },
  {
    "name": "rest",
    "path": "/properties/apis/properties/rest",
    "type": "property",
  },
  {
    "name": "grpc",
    "path": "/properties/apis/properties/grpc",
    "type": "property",
  },
  {
    "name": "wss",
    "path": "/properties/apis/properties/wss",
    "type": "property",
  },
  {
    "name": "grpc-web",
    "path": "/properties/apis/properties/grpc-web",
    "type": "property",
  },
  {
    "name": "evm-http-jsonrpc",
    "path": "/properties/apis/properties/evm-http-jsonrpc",
    "type": "property",
  },
  {
    "name": "id",
    "path": "/$defs/peer/properties/id",
    "type": "property",
  },
  {
    "name": "address",
    "path": "/$defs/peer/properties/address",
    "type": "property",
  },
  {
    "name": "provider",
    "path": "/$defs/peer/properties/provider",
    "type": "property",
  },
  {
    "name": "address",
    "path": "/$defs/endpoint/properties/address",
    "type": "property",
  },
  {
    "name": "provider",
    "path": "/$defs/endpoint/properties/provider",
    "type": "property",
  },
  {
    "name": "archive",
    "path": "/$defs/endpoint/properties/archive",
    "type": "property",
  },
  {
    "name": "kind",
    "path": "/$defs/explorer/properties/kind",
    "type": "property",
  },
  {
    "name": "url",
    "path": "/$defs/explorer/properties/url",
    "type": "property",
  },
  {
    "name": "tx_page",
    "path": "/$defs/explorer/properties/tx_page",
    "type": "property",
  },
  {
    "name": "account_page",
    "path": "/$defs/explorer/properties/account_page",
    "type": "property",
  },
  {
    "name": "denom",
    "path": "/$defs/fee_token/properties/denom",
    "type": "property",
  },
  {
    "name": "fixed_min_gas_price",
    "path": "/$defs/fee_token/properties/fixed_min_gas_price",
    "type": "property",
  },
  {
    "name": "low_gas_price",
    "path": "/$defs/fee_token/properties/low_gas_price",
    "type": "property",
  },
  {
    "name": "average_gas_price",
    "path": "/$defs/fee_token/properties/average_gas_price",
    "type": "property",
  },
  {
    "name": "high_gas_price",
    "path": "/$defs/fee_token/properties/high_gas_price",
    "type": "property",
  },
  {
    "name": "gas_costs",
    "path": "/$defs/fee_token/properties/gas_costs",
    "type": "property",
  },
  {
    "name": "denom",
    "path": "/$defs/staking_token/properties/denom",
    "type": "property",
  },
  {
    "name": "chain_name",
    "path": "/$defs/pointer/properties/chain_name",
    "type": "property",
  },
  {
    "name": "base_denom",
    "path": "/$defs/pointer/properties/base_denom",
    "type": "property",
  },
  {
    "name": "items",
    "path": "/properties/key_algos/items",
    "type": "property",
  },
  {
    "name": "items",
    "path": "/properties/alternative_slip44s/items",
    "type": "property",
  },
  {
    "name": "items",
    "path": "/properties/images/items",
    "type": "property",
  },
  {
    "name": "#/$defs/explorer",
    "path": "/properties/explorers/items",
    "type": "$ref",
  },
  {
    "name": "items",
    "path": "/properties/explorers/items",
    "type": "property",
  },
  {
    "name": "items",
    "path": "/properties/keywords/items",
    "type": "property",
  },
  {
    "name": "items",
    "path": "/properties/extra_codecs/items",
    "type": "property",
  },
  {
    "name": "$schema",
    "path": "/properties/$schema",
    "type": "property",
  },
  {
    "name": "chain_name",
    "path": "/properties/chain_name",
    "type": "property",
  },
  {
    "name": "chain_id",
    "path": "/properties/chain_id",
    "type": "property",
  },
  {
    "name": "pre_fork_chain_name",
    "path": "/properties/pre_fork_chain_name",
    "type": "property",
  },
  {
    "name": "pretty_name",
    "path": "/properties/pretty_name",
    "type": "property",
  },
  {
    "name": "website",
    "path": "/properties/website",
    "type": "property",
  },
  {
    "name": "update_link",
    "path": "/properties/update_link",
    "type": "property",
  },
  {
    "name": "status",
    "path": "/properties/status",
    "type": "property",
  },
  {
    "name": "network_type",
    "path": "/properties/network_type",
    "type": "property",
  },
  {
    "name": "bech32_prefix",
    "path": "/properties/bech32_prefix",
    "type": "property",
  },
  {
    "name": "bech32_config",
    "path": "/properties/bech32_config",
    "type": "property",
  },
  {
    "name": "daemon_name",
    "path": "/properties/daemon_name",
    "type": "property",
  },
  {
    "name": "node_home",
    "path": "/properties/node_home",
    "type": "property",
  },
  {
    "name": "key_algos",
    "path": "/properties/key_algos",
    "type": "property",
  },
  {
    "name": "slip44",
    "path": "/properties/slip44",
    "type": "property",
  },
  {
    "name": "alternative_slip44s",
    "path": "/properties/alternative_slip44s",
    "type": "property",
  },
  {
    "name": "fees",
    "path": "/properties/fees",
    "type": "property",
  },
  {
    "name": "staking",
    "path": "/properties/staking",
    "type": "property",
  },
  {
    "name": "codebase",
    "path": "/properties/codebase",
    "type": "property",
  },
  {
    "name": "images",
    "path": "/properties/images",
    "type": "property",
  },
  {
    "name": "logo_URIs",
    "path": "/properties/logo_URIs",
    "type": "property",
  },
  {
    "name": "description",
    "path": "/properties/description",
    "type": "property",
  },
  {
    "name": "peers",
    "path": "/properties/peers",
    "type": "property",
  },
  {
    "name": "apis",
    "path": "/properties/apis",
    "type": "property",
  },
  {
    "name": "explorers",
    "path": "/properties/explorers",
    "type": "property",
  },
  {
    "name": "keywords",
    "path": "/properties/keywords",
    "type": "property",
  },
  {
    "name": "extra_codecs",
    "path": "/properties/extra_codecs",
    "type": "property",
  },
  {
    "name": "peer",
    "path": "/$defs/peer",
    "type": "$def",
  },
  {
    "name": "endpoint",
    "path": "/$defs/endpoint",
    "type": "$def",
  },
  {
    "name": "explorer",
    "path": "/$defs/explorer",
    "type": "$def",
  },
  {
    "name": "fee_token",
    "path": "/$defs/fee_token",
    "type": "$def",
  },
  {
    "name": "staking_token",
    "path": "/$defs/staking_token",
    "type": "$def",
  },
  {
    "name": "pointer",
    "path": "/$defs/pointer",
    "type": "$def",
  },
]
`;
